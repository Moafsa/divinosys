version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: divino-lanches-app
    ports:
      - "8080:80"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=divino_db
      - DB_USER=divino_user
      - DB_PASSWORD=divino_password
      - APP_ENV=production
      - APP_URL=http://localhost:8080
      - WUZAPI_URL=http://wuzapi:8080
      - WUZAPI_API_KEY=1234ABCD
      # AI Integration
      - USE_N8N_AI=${USE_N8N_AI:-false}
      - AI_N8N_WEBHOOK_URL=${AI_N8N_WEBHOOK_URL}
      - AI_N8N_TIMEOUT=${AI_N8N_TIMEOUT:-30}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      # Asaas Payment Gateway
      - ASAAS_API_KEY=${ASAAS_API_KEY:-}
      - ASAAS_API_URL=${ASAAS_API_URL:-https://sandbox.asaas.com/api/v3}
      - ASAAS_WEBHOOK_URL=${ASAAS_WEBHOOK_URL:-}
    depends_on:
      - postgres
      - redis
      - mcp-server
    volumes:
      - .:/var/www/html
      - ./uploads:/var/www/html/uploads
      - ./logs:/var/www/html/logs
      - ./backups:/var/www/html/backups
    networks:
      - divino-network

  postgres:
    image: postgres:15-alpine
    container_name: divino-lanches-db
    environment:
      - POSTGRES_DB=divino_db
      - POSTGRES_USER=divino_user
      - POSTGRES_PASSWORD=divino_password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - divino-network

  redis:
    image: redis:7-alpine
    container_name: divino-lanches-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - divino-network

  wuzapi:
    build:
      context: ./docker/wuzapi
      dockerfile: Dockerfile
    container_name: divino-lanches-wuzapi
    ports:
      - "8081:8080"  # Backend Go - Externo:8081 → Interno:8080
      - "3001:3000"  # Frontend React - Externo:3001 → Interno:3000
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=wuzapi
      - DB_USER=wuzapi
      - DB_PASSWORD=wuzapi
      - WUZAPI_URL=http://wuzapi:8080  # Comunicação interna entre containers
      - WEBHOOK_URL=http://app:80/webhook/wuzapi.php
      - WUZAPI_ADMIN_TOKEN=admin123456  # Token para acesso administrativo
    volumes:
      - wuzapi_sessions:/app/sessions
      - wuzapi_logs:/app/logs
    depends_on:
      - postgres
    networks:
      - divino-network

  # MCP Server - Model Context Protocol for AI data access
  mcp-server:
    build:
      context: ./n8n-mcp-server
      dockerfile: Dockerfile
    container_name: divino-mcp-server
    ports:
      - "3100:3100"  # MCP API
    environment:
      - MCP_PORT=3100
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=divino_db
      - DB_USER=divino_user
      - DB_PASSWORD=divino_password
      - MCP_API_KEY=${MCP_API_KEY:-development-key-change-in-production}
      - NODE_ENV=production
    depends_on:
      - postgres
    volumes:
      - mcp_logs:/app/logs
    networks:
      - divino-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3100/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # n8n - Usando servidor externo
  # O n8n já está instalado em outro servidor
  # Apenas configure N8N_WEBHOOK_URL no .env apontando para seu servidor

volumes:
  postgres_data:
  redis_data:
  wuzapi_sessions:
  wuzapi_logs:
  mcp_logs:

networks:
  divino-network:
    driver: bridge
